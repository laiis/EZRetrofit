apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: MyCustomPlugin

sourceCompatibility = 1.7
targetCompatibility = 1.7

jar {
    version "0.0.7"
    baseName 'EZRetrofitlib'
}


repositories {
    mavenCentral()
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'

    compile 'com.squareup.retrofit2:retrofit:2.2.0'
    compile 'com.squareup.retrofit2:converter-gson:2.2.0'

    compile 'com.squareup.okhttp3:okhttp:3.7.0'
    compile 'com.squareup.okhttp3:okhttp-urlconnection:3.7.0'
    compile 'com.squareup.okio:okio:1.12.0'
}

buildscript {
    repositories {
        mavenCentral()
        flatDir dirs: './proguard/lib'
    }
    dependencies {
        classpath ':proguard:'
    }
}

allprojects {
    repositories {
        mavenCentral()
    }
}

task jar(type: Jar, overwrite: true) {
    doLast {
        project.proguard.execute()
//        file('build/libs/EZRetrofit-0.0.7.jar').delete()
//        file('build/libs/EZRetrofit-0.0.7-proguard.jar').renameTo('build/libs/EZRetrofit-0.0.7.jar')
    }
}

//task proguard(type: proguard.gradle.ProGuardTask) {
//    configuration 'proguard-rules.pro'
//
//    injars 'build/libs/EZRetrofit-0.0.6.jar'
//    outjars 'build/libs/EZRetrofit-0.0.6-proguard.jar'
//}


class MyCustomPlugin implements Plugin<Project> {

    void apply(Project project) {
        project.tasks.create("proguard", proguard.gradle.ProGuardTask.class) {
            configuration 'proguard-rules.pro'

            injars "build/libs/EZRetrofitlib-0.0.7.jar"
            outjars "build/libs/EZRetrofit-0.0.7.jar"
        }
    }

}