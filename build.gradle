apply plugin: 'java'
apply plugin: 'maven'
apply plugin: MyCustomPlugin

compileJava {
    sourceCompatibility = 1.7
    targetCompatibility = 1.7
}

jar {
    version "0.0.15"
    baseName 'EZRetrofit'
}


repositories {
    mavenCentral()
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'

    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'

    implementation 'com.squareup.okhttp3:okhttp:3.12.0'
    implementation 'com.squareup.okhttp3:okhttp-urlconnection:3.12.0'
    implementation 'com.squareup.okio:okio:2.1.0'
}

buildscript {
    repositories {
        mavenCentral()
        flatDir dirs: './proguard/lib'
    }
    dependencies {
        classpath ':proguard:'
    }
}

allprojects {
    repositories {
        mavenCentral()
    }
}

task jar(type: Jar, overwrite: true) {
    doLast {
        project.useproguard.execute()
        file('build/libs/EZRetrofit-0.0.15.jar').delete()
        file('build/libs/EZRetrofit-0.0.15-proguard.jar').renameTo('build/libs/EZRetrofit-0.0.15.jar')
    }
}

//task proguard(type: proguard.gradle.ProGuardTask) {
//    configuration 'proguard-rules.pro'
//
//    injars 'build/libs/EZRetrofit-0.0.6.jar'
//    outjars 'build/libs/EZRetrofit-0.0.6-proguard.jar'
//}


class MyCustomPlugin implements Plugin<Project> {

    void apply(Project project) {
        project.tasks.create("useproguard", proguard.gradle.ProGuardTask.class) {
            configuration 'proguard-rules.pro'

            injars "build/libs/EZRetrofit-0.0.15.jar"
            outjars "build/libs/EZRetrofit-0.0.15-proguard.jar"
        }
    }

}